Mapper.py

#!/usr/bin/env python

import sys

for line in sys.stdin:
	filename = os.getenv("map_input_file")
	filename = filename.split("/")[-1]
	line = line.strip().lower()
	words = line.split()
	for w in words:
		sys.stdout.write("{0}\t{1}\n", format((w,filename)1))
		

chmod +x mapper.py
echo "This this to for and also to" | ./mapper.py

Reducer.py
#!/usr/bin/env python

import sys

current = None
total = 0

for line in sys.stdin:
	filename = os.getenv("map_input_file")
	filename = filename.split("/")[-1]
	aKey, val = line.strip().split("\t")
	val = int(val)
	if current == aKey:
		total += val
	else:
		if current is not None:
			sys.stdout.write("{0}\t{1}\n", format((current,filename) total))
		current = aKey
		total = val
if current:
	sys.stdout.write("{0}\t{1}\n", format((current,filename) total))
	

chmod +x reducer.py
echo "This this to for and also to" | ./mapper.py | sort | reducer.py
or 
!e | sort | reducer.py
(this calls last use of echo as e is starting of echo)


hadoop jar /usr/lib/hadoop-0.20-mapreduce/contrib/streaming/hadoop-streaming*.jar -input shakespeare  -output count_output\
> -file mapper.py -file reducer.py \
> -mapper mapper.py -reducer reducer.py


hdfs dfs -ls /user/training

hdfs dfs -ls /user/training/count_output

hdfs dfs -cat count_output

(Remove stop words like 'a')

(give map reduce by file) - Watch echo360 from 1925 Hrs

(assign text file as input to variable) -> cmd='cat hadoopCommand.txt'
echo $cmd
















		
		
		
		
		
		
		
		
		
		
		
		
		
		
		